# Random Forest {.unnumbered}

```{r, echo=FALSE}
dem <- terra::rast("Data/PF_DTM3.tif")
multi_pts <- terra::vect("Data/multi_pts.shp")
simple_pts <- terra::vect("Data/simple_pts.shp")
grad20 <- terra::rast("Data/grad20.tif")
prof20 <- terra::rast("Data/prof20.tif")
plan20 <- terra::rast("Data/plan20.tif")
grad100 <- terra::rast("Data/grad100.tif")
prof100 <- terra::rast("Data/prof100.tif")
plan100 <- terra::rast("Data/plan100.tif")
dev100 <- terra::rast("Data/dev100.tif")
twi10 <- terra::rast("Data/twi10.tif")
in_rasts <- list(grad20 = grad20, prof20 = prof20,
                 plan20 = plan20, grad100 = grad100,
                 prof100 = prof100, plan100 = plan100,
                 dev100 = dev100, twi10 = twi10)
load("Data/fun.RData")
```

Our next model is a random forest, which is set as the default model for the `build_model` function.

## Description

A random forest is a model that generates a large number of decision trees (hence the name). To calculate probabilities, the model checks the decisions and then calculates the proportion of the trees that chose each class. Those proportions are the estimated probabilities. To make an overall prediction, the model just takes the class with the highest amount trees that decided in its favor.

![](Pics/forest.png)

## Examples of Use

```{r}
multi_mod <- build_model(in_rasts = in_rasts,
                         train = multi_pts, ref_raster = dem)

simple_mod <- build_model(in_rasts = in_rasts,
                         train = simple_pts, ref_raster = dem)
```

Since they are very similar algorithms, the returned output for random forest models is the same as with trees, as we can see from the printed output below:

```{r}
multi_mod
```
