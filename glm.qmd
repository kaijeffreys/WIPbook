# Logistic Regression {.unnumbered}

```{r, echo=FALSE}
dem <- terra::rast("Data/PF_DTM3.tif")
multi_pts <- terra::vect("Data/multi_pts.shp")
simple_pts <- terra::vect("Data/simple_pts.shp")
grad20 <- terra::rast("Data/grad20.tif")
prof20 <- terra::rast("Data/prof20.tif")
plan20 <- terra::rast("Data/plan20.tif")
grad100 <- terra::rast("Data/grad100.tif")
prof100 <- terra::rast("Data/prof100.tif")
plan100 <- terra::rast("Data/plan100.tif")
dev100 <- terra::rast("Data/dev100.tif")
twi10 <- terra::rast("Data/twi10.tif")
in_rasts <- list(grad20 = grad20, prof20 = prof20,
                 plan20 = plan20, grad100 = grad100,
                 prof100 = prof100, plan100 = plan100,
                 dev100 = dev100, twi10 = twi10)
load("Data/fun.RData")
```

## Description

Logistic regression is another type of machine learning model. Different from the first two models, logistic regression is much more mathematically involved. In short, it tries to find relationships between each field of input data and the resulting class (i.e. finding connections between gradient and wetland type). Using these relationships, it then creates a regression formula (similar to the slope equation $y = mx+b$ in Algebra) that is then used to probabilities. Then, whichever class is calculated to have highest probability is what is the predicted outcome.

One caveat of logistic regression is that it assumes that each of the input data is independent of each other. However, this is often the case, especially using spatial data. As a result, the predictions/probabilities could end up looking a little unsual, if not careful.

## Examples of Use

```{r}
multi_mod <- build_model(in_rasts = in_rasts, train = multi_pts,
                         ref_raster = dem, model_type = "glm")

simple_mod <- build_model(in_rasts = in_rasts, train = simple_pts, 
                          ref_raster = dem, model_type = "glm")
```

Returned is a list object, which contains lots and lots of information, including the predicted values of the training data, different levels of accuracy assessments, and the coefficients. These coefficients are a measure of the relationship between that data field and the class. Farther the coefficient is from zero, the larger the amount of change is supposed to be when picking between classes.

Running the object in console, like done below, shows us these coefficients

```{r}
simple_mod
```
